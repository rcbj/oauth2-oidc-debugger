version: '3'
services:
  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    command: ["start-dev"]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: keycloak
      KEYCLOAK_ADMIN_PASSWORD: keycloak
    hostname: keycloak
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9000/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 30
    depends_on:
      - postgres
    networks:
      - keycloak
  api:
    container_name: api
    image: rcbj/api
    environment:
      - CONFIG_FILE=./env/docker-tests.js
    build:
      context: .
      dockerfile: api/Dockerfile
      args:
        CONFIG_FILE: ${CONFIG_FILE}
    depends_on:
      - keycloak
    networks:
      - keycloak
    ports:
      - 4000:4000
  client:
    container_name: client
    image: rcbj/client
    environment:
      - CONFIG_FILE=./env/docker-tests.js
    build:
      context: .
      dockerfile: client/Dockerfile 
      args:
        CONFIG_FILE: ${CONFIG_FILE}
    depends_on:
      - api
    networks:
      - keycloak
    ports:
      - 3000:3000
  tests:
    container_name: tests
    image: rcbj/test
    build:
      context: .
      dockerfile: tests/Dockerfile
    depends_on:
      - client
      - api
      - keycloak
    networks:
      - keycloak

volumes:
  postgres_data:

networks:
  keycloak:
    driver: bridge

